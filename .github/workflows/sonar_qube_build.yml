name: SonarQube Build
on:
  push:
    branches:
      - develop
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - develop
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      # The analysis requires to retrieve dependencies and build successfully

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Install dependencies
        run: flutter pub get

      - name: Generate files with build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Check for test files
        id: check_tests
        run: |
          if [ -z "$(find test -name '*_test.dart')" ]; then
            echo "No test files found."
            echo "run_tests=false" >> $GITHUB_ENV
          else
            echo "Test files found."
            echo "run_tests=true" >> $GITHUB_ENV
          fi

      - name: Run tests with coverage
        if: env.run_tests == 'true'
        run: flutter test --coverage

      - name: Check if coverage file exists
        id: coverage_check
        run: echo "exists=$(if [ -f coverage/lcov.info ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT

      - name: Build
        run: flutter build apk --debug

      - name: SonarQube Scan
        if: steps.coverage_check.outputs.exists == 'true'
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}